// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Survey {
  surveyId                          String             @id @default(uuid())
  name                              String?
  shortDesc                         String?
  creatorUserId                     String?
  clientUserId                      String?
  hasRequestFeedbackEnabled         Boolean?           @default(false)
  hasProvideFeedbackEnabled         Boolean?           @default(false)
  canViewParticipants               Boolean?           @default(false)
  feedbackGiverSurveyThreshold      Int?               @default(3)
  responsePerQuestionnaireThreshold Int?               @default(3)
  requiresSelfAssessment            Boolean?           @default(false)
  reportType                        ReportType?        @default(INDIVIDUAL) 
  associatedSurveys                 AssociatedSurvey[] @relation("HasAssociatedSurveys")
  isAssociatedWithSurveys           AssociatedSurvey[] @relation("IsAssociatedWithSurvey")
  published                         Boolean?           @default(false)
  openingDate                       DateTime?
  closingDate                       DateTime?
  created                           DateTime           @default(now())
  updated                           DateTime           @updatedAt
}

enum ReportType {
  INDIVIDUAL
  ORGANIZATION
}

model AssociatedSurvey {
  surveyId           String
  associatedSurveyId String
  survey             Survey @relation("HasAssociatedSurveys", fields: [surveyId], references: [surveyId], onDelete: Cascade)
  associatedSurvey   Survey @relation("IsAssociatedWithSurvey", fields: [associatedSurveyId], references: [surveyId], onDelete: Cascade)

  @@id([surveyId, associatedSurveyId])
}
